dialog (Result) {
  match: _ (this) {
    from-property: Schedule (schedule) {
      from-output: GetSchedule (action)
    }
  }
  if (exists(action.time)) {
    template ("I found #{size(schedule.matches)} #{concept(schedule.matches)} scheduled #{input(action.time)}.")
    
  } else {
    //// USER GAVE NO INPUT ////
    if (size(schedule.series) == 1 && schedule.series[0].status == 'InProgress') {
      ///// SERIES IN PROGRESS /////
      if (size(schedule.tournaments) == 1 && schedule.tournaments[0].status == 'InProgress') {
        ///// TOURNAMENT IN PROGRESS /////
        template ("#{value(schedule.series[0].name)}, #{value(schedule.tournaments[0].name)} is in progress[, with #{size(schedule.matches)} #{concept(schedule.matches)} left.]")
      } else {
        // TODO: dialog about last tournament's winners, and when next series will begin
        template ("#{value(schedule.series[0].name)}, #{value(schedule.tournaments[0].name)} is in progress.")
      }
      template ("#{value(schedule.series[0].name)}, #{value(schedule.tournaments[0].name)} is in progress.")
      
    } else {
      //// OFF SEASON /////
      template ("Overwatch League is in its off season.")
      // TODO: off season dialog - last serie's winners, when will new series begin
    }
  }
  
  template ("I found #{size(schedule.matches)} #{concept(schedule.matches)}.")
}
